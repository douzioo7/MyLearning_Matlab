一：基础准备及入门

1，计算器功能
	1.1：三个黑点...表示“续行”
	1.2：clear指令清除工作区间的变量

2，变量的定义：
	2.1：区分大小写
	2.2：第一个字符必须是英文字母
	3.3：变量名不得包含空格、标点、运算符，但可包含下联符“_”。

3，面向复数设计的运算：
	MATLAB 的所有运算都是定义在复数域上的。这样设计的好处是：在进行运算时，不
	必像其他程序语言那样把实部、虚部分开处理。为描述复数，虚数单位用预定义变量
	 i 或 j	表示。

4，面向数组设计的运算：
	4.1：
	在 MATLAB中，标量数据被看作(1×1)的数组（Array）数据。所有的数据都被存放在
	适当大小的数组中。为加快计算速度（运算的向量化处理），MATLAB 对以数组形式存
	储的数据设计了两种基本运算：一种是所谓的数组运算；另一种是所谓的矩阵运算。
	4.2：二维数组的输入
	数组标识符：“[]”     元素分隔符：空格或逗号	数组行间分隔符： 分号或“回车键”

5，当数组被赋予“变换”属性时，二维数组就被称为矩阵。

6，指令窗的常用控制命令：
	cd：设置当前工作目录
	clf：清除图形窗
	clc：清除指令窗中显示内容
	clear：清除MATLAB工作空间中保存的变量
	dir：列出指定目录下的文件和子目录清单
	edit：打开M文件编辑器
	exit：关闭/退出MATLAB
	quit：关闭/退出MATLAB
	more：使其后的显示内容分页进行
	return：返回到上层调用程序；结束键盘模式
	type:显示指定M文件的内容
	which：指出其后文件所在的目录

7，指令窗中指令行编辑的常用操作键
	上下左右键：上下为寻找指令，左右为移动光标
	PageUp与PageDown：前寻式和后寻式翻阅窗中的内容
	Home：使光标移动到当前行的首端
	End：使光标移动到当前行的尾端
	Delete：删除光标右边的字符
	Backspace：删除光标左边的字符
	Esc：清除当前行的全部内容

8，用户目录和当前目录设置
	8.1：建立用户目录
	在使用 MATLAB 的过程中，为管理方便，本书作者建议：用户应尽量为自己建立一个
	专门的工作目录，即“用户目录”，用来存放自己创建的应用文件。尽管，matlab\work 
	允许用户存放文件，用户最好仅把它作为临时工作目录使用。
	8.2：把用户目录设置成当前目录
	在 MATLAB 环境中，如果不特别指明存放数据和文件的目录，那么MATLAB 总默认
	地将它们存放在当前目录上。因此，出于MATLAB 运行可靠和用户方便的考虑，本书作者
	建议：在MATLAB 开始工作的时候，就应把用户自己的“用户目录”设置成当前目录。

9，工作区的三个常用管理指令：who clear pack
	9.1：查询指令who和whos
		用于查询MATLAB内存变量
		两个指令的区别在于内存变量信息的详细程度不同
	9.2：clear指令
		从工作空间中删除变量和函数的指令
		常用格式：
			clear：清除工作空间中的所有变量
			clear val1 val2：清除工作空间中的val1和val2变量
			clear all：清除工作空间中的所有变量、全局变量、编译过的M函数和MEX链接
			clear fun1 fun2：清除工作空间中名为fun1和fun2的函数
	9.3：pack指令
		整理工作空间内存碎片的指令

10，存取数据的操作指令sava和load
	10.1：建立用户目录，并使之成为当前目录，保存数据
		mkdir('c:\','my_dir'); 	%在C 盘上创建目录my_dir
		cd c:\my_dir 		%使c:\my_dir 成为当前目录
		save saf X Y Z 		%选择内存中的X,Y,Z 变量保存为saf.mat 文件
		dir 			%显示目录上的文件
	10.2：清空内存，从saf.mat 向内存装载变量Z
		clear 			%清除内存中的全部变量
		load saf Z 		%把saf.mat 文件中的Z 变量装入内存
		who 			%检查内存中有什么变量

11，matlab脚本编写（.m文件）
	11.1： M 脚本文件
		（1）该文件中的指令形式和前后位置，与解决同一个问题时在指令窗中输入的那组指令没有任何区别。
		（2）MATLAB 在运行这个脚本时，只是简单地从文件中读取那一条条指令，送到MATLAB 中去执行。
		（3）与在指令窗中直接运行指令一样，脚本文件运行产生的变量都是驻留在MATLAB 基本工作空间中。
		（4）文件扩展名是“.m”
	11.2： Debugger调试
		断点与步进

12，matlab帮助系统
	12.1：帮助体系
		指令窗帮助子系统	文本信息		所有M文件的帮助注释内容
		帮助导航系统		HTML形式		位于matlab\help目录下
		典型算例演示系统	HTML和GUI交互界面	位于matlab\toolbox下各分类的demos下
		视频演示系统		flash形式		内容限于版本新特点
		PDF文件帮助系统
		web网上帮助系统
	12.2：DEMO演示系统
		以算例为载体，由HTML、GUI 界面、显示M 文件的编辑器组合而成。
		该系统综合演示：为解决一个具体算例，各指令间如何配合使用。
		在指令窗中运行 demos 指令，或点击帮助导航器中的“Demos”窗，就可引出 DEMO 演示系统。





二：数值数组及数组运算
	数值数组（Numeric Array）和数组运算（Array Operations）始终是MATLAB 的核心内容。

1，数值数组的创建和寻访
	1.1：一维数组的创建
		a1=1:6
		a2=0:pi/4:pi
		a3=1:-0.1:0
	1.2：二维数组的创建
		小规模数组的直接输入法：C=[1,2,3;4,5,6]
		中规模数组的数组编辑器创建法：Array Editor
		中规模数组的M文件创建法：将数组写入.m文件，通过运行.m文件创建数组
		利用matlab函数创建数组：
			ones(2,4)
			ans =
				1 1 1 1
				1 1 1 1
			randn('state',0)
			randn(2,3)
			ans =
				-0.4326 0.1253 -1.1465
				-1.6656 0.2877 1.1909
			D=eye(3)
			D =
				1 0 0
				0 1 0
				0 0 1
			diag(D)
			ans =
				1
				1
				1
			diag(diag(D))
			ans =
				1 0 0
				0 1 0
				0 0 1
			randsrc(3,20,[-3,-1,1,3],1)
			ans =
			  Columns 1 through 10
				3 1 3 -1 -3 3 -3 -3 -1 3
				1 3 1 3 -1 1 1 1 1 1
				3 -1 -3 -1 1 -1 3 -1 -1 1
			  Columns 11 through 20
				-1 -1 -3 1 1 -3 3 -1 1 3
				1 1 3 -1 -1 -3 -1 -1 1 -3
				1 -1 -3 3 -1 -1 3 -1 3 3
	1.3：二位数组元素的标识和寻访





























